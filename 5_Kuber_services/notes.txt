kubectl config set-context --current --namespace demo

kubectl expose pod apache-pod --type=NodePort --port=80

kubectl run test-pod --image=alpine -- sleep 3600

kubectl get services --all-namespaces

nslookup apache-pod.demo.svc.cluster.local

kubectl expose pod apache-pod --type=ClusterIP --port=80

kubectl expose pod apache-pod --target-port=80 --port=1000 --type=NodePort

C:\Users\rmallaya>kubectl edit pod apache-pod
pod/apache-pod edited

C:\Users\rmallaya>kubectl get pods -l version=1
NAME         READY   STATUS    RESTARTS   AGE
apache-pod   1/1     Running   1          21h

C:\Users\rmallaya>kubectl describe pod apache-pod
Name:         apache-pod
Namespace:    demo
Priority:     0
Node:         minikube/192.168.99.103
Start Time:   Thu, 26 Nov 2020 16:58:16 +0530
Labels:       version=1


//evaluates but does not run/create the pod
C:\Users\rmallaya>kubectl run check-pod --image=nginx -n demo --dry-run -o yaml
W1127 14:10:33.507116   18660 helpers.go:553] --dry-run is deprecated and can be replaced with --dry-run=client.
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: check-pod
  name: check-pod
  namespace: demo
spec:
  containers:
  - image: nginx
    name: check-pod
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: {}

$ kubectl api-resources | grep pod

$ kubectl create -f two-containers.yml
pod/two-containers created

$ kubectl get pods -w
NAME             READY   STATUS     RESTARTS   AGE
apache-pod       1/1     Running    1          21h
test-pod         1/1     Running    1          90m
two-containers   1/2     NotReady   0          47s

D:\>kubectl exec -it two-containers -c nginx-container bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
root@two-containers:/# cd /usr/share/nginx/html/
root@two-containers:/usr/share/nginx/html# cat index.html
Hello from the ubuntu container
root@two-containers:/usr/share/nginx/html#

-----------------------PASSING ENV to POD  =>>>  SECRETS and CONFIGMAP   -------------
SENSITIVE DATA - Secrets - Encoded by Orchestrator
GENERIC DATA - ConfigMap - Data is abstract/value

rmallaya@RMALLAYA-IN MINGW64 ~/yamls
$ kubectl api-resources | grep configmap
configmaps                        cm                                          true         ConfigMap

rmallaya@RMALLAYA-IN MINGW64 ~/yamls
$ kubectl api-resources | grep secret
secrets                                                                       true         Secret

Both belongs to namespace

$ kubectl api-resources | grep crd
customresourcedefinitions         crd,crds     apiextensions.k8s.io           false        CustomResourceDefinition


$ kubectl create secret generic database-values --from-literal=username=root --from-literal=password=admin
secret/database-values created

$ kubectl get secrets
NAME                  TYPE                                  DATA   AGE
database-values       Opaque                                2      91s
default-token-6nhd2   kubernetes.io/service-account-token   3      22h

$ kubectl describe secret database-values
Name:         database-values
Namespace:    demo
Labels:       <none>
Annotations:  <none>

Type:  Opaque

Data
====
password:  5 bytes
username:  4 bytes

$ kubectl get secret database-values -o yaml
apiVersion: v1
data:
  password: YWRtaW4=
  username: cm9vdA==
kind: Secret
metadata:
  creationTimestamp: "2020-11-27T09:31:19Z"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:password: {}
        f:username: {}
      f:type: {}
    manager: kubectl-create
    operation: Update
    time: "2020-11-27T09:31:19Z"
  name: database-values
  namespace: demo
  resourceVersion: "82953"
  selfLink: /api/v1/namespaces/demo/secrets/database-values
  uid: d03d9e3d-60d1-4990-97a3-ea7a4dcbb76d
type: Opaque


$ kubectl create -f podwithsecrets.txt
pod/secret-envars-test-pod created

$ kubectl get pods
NAME                     READY   STATUS     RESTARTS   AGE
apache-pod               1/1     Running    1          22h
secret-envars-test-pod   1/1     Running    0          10s
test-pod                 1/1     Running    2          127m
two-containers           1/2     NotReady   0          37m

$ kubectl exec secret-envars-test-pod env
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=secret-envars-test-pod
SECRET_USERNAME=root
SECRET_PASSWORD=admin
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
APACHE_POD_SERVICE_HOST=10.108.204.156
KUBERNETES_SERVICE_PORT=443
APACHE_POD_SERVICE_PORT=80
APACHE_POD_PORT=tcp://10.108.204.156:80
APACHE_POD_PORT_80_TCP_PORT=80
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
APACHE_POD_PORT_80_TCP=tcp://10.108.204.156:80
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
APACHE_POD_PORT_80_TCP_PROTO=tcp
APACHE_POD_PORT_80_TCP_ADDR=10.108.204.156
NGINX_VERSION=1.19.5
NJS_VERSION=0.4.4
PKG_RELEASE=1~buster
HOME=/root

-----------------------

$ kubectl create -f pod_with_cm.yml
pod/pod-from-cm created

rmallaya@RMALLAYA-IN MINGW64 ~/yamls
$ kubectl get pods
NAME                     READY   STATUS     RESTARTS   AGE
apache-pod               1/1     Running    1          22h
pod-from-cm              1/1     Running    0          7s
secret-envars-test-pod   1/1     Running    0          12m
test-pod                 1/1     Running    2          139m
two-containers           1/2     NotReady   0          50m

rmallaya@RMALLAYA-IN MINGW64 ~/yamls
$ kubectl exec pod-from-cm env
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=pod-from-cm
database_uri=mongodb://localhost:27017
keys=image.public.key=771
rsa.public.key=42

database=mongodb
APACHE_POD_SERVICE_HOST=10.108.204.156
APACHE_POD_PORT_80_TCP=tcp://10.108.204.156:80
APACHE_POD_PORT_80_TCP_ADDR=10.108.204.156
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
APACHE_POD_PORT=tcp://10.108.204.156:80
APACHE_POD_PORT_80_TCP_PORT=80
APACHE_POD_SERVICE_PORT=80
APACHE_POD_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT_443_TCP_PORT=443
NGINX_VERSION=1.19.5
NJS_VERSION=0.4.4
PKG_RELEASE=1~buster
HOME=/root

-----------------CHANGING CM-------------

rmallaya@RMALLAYA-IN MINGW64 ~/yamls
$ kubectl edit cm example-configmap
configmap/example-configmap edited

rmallaya@RMALLAYA-IN MINGW64 ~/yamls
$ kubectl describe cm example-configmap
Name:         example-configmap
Namespace:    demo
Labels:       <none>
Annotations:  <none>

Data
====
database:
----
MYSQLSERVER
database_uri:
----
mongodb://localhost:27017
keys:
----
image.public.key=771
rsa.public.key=42

Events:  <none>

-------------------------------------------------CHANGE NOT REFLECTED ON POD-------------------
$ kubectl exec pod-from-cm env
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=pod-from-cm
database_uri=mongodb://localhost:27017
keys=image.public.key=771
rsa.public.key=42

database=mongodb
APACHE_POD_SERVICE_HOST=10.108.204.156
APACHE_POD_PORT_80_TCP=tcp://10.108.204.156:80
APACHE_POD_PORT_80_TCP_ADDR=10.108.204.156
KUBERNETES_PORT=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
APACHE_POD_PORT=tcp://10.108.204.156:80
APACHE_POD_PORT_80_TCP_PORT=80
APACHE_POD_SERVICE_PORT=80
APACHE_POD_PORT_80_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.96.0.1
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT_443_TCP_PORT=443
NGINX_VERSION=1.19.5
NJS_VERSION=0.4.4
PKG_RELEASE=1~buster
HOME=/root


$ kubectl create -f pod-with-cmvolume.yml
pod/pod-from-cm-volume created

D:\>kubectl exec -it pod-from-cm-volume bash

#cd config/

#ls -al

# cat database

#exit

$ kubectl edit cm example-configmap
configmap/example-configmap edited

D:\>kubectl exec -it pod-from-cm-volume bash

#cd config/

#ls -al

# cat database

#exit

--------

REPLICASET
	- State of the service is at service discovery or service registry?
	- a pod in replicaset will only use the resources and does not store any state.
	
$ kubectl api-resources | grep deploy
deployments                       deploy       apps                           true         Deployment

$ kubectl create deployment web-deployment --image=httpd
deployment.apps/web-deployment created

$ kubectl get deployments
NAME             READY   UP-TO-DATE   AVAILABLE   AGE
web-deployment   1/1     1            1           28s

$ kubectl get pods
NAME                            READY   STATUS     RESTARTS   AGE
apache-pod                      1/1     Running    1          23h
pod-from-cm                     1/1     Running    0          65m
pod-from-cm-volume              1/1     Running    0          56m
secret-envars-test-pod          1/1     Running    0          78m
test-pod                        1/1     Running    3          3h25m
two-containers                  1/2     NotReady   0          115m
web-deployment-6d9bdd7c-xrkgh   1/1     Running    0          9s

$ kubectl expose deployment web-deployment --port=80 --type=NodePort
service/web-deployment exposed

$ kubectl get deployments -o wide
NAME             READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES   SELECTOR
web-deployment   1/1     1            1           2m10s   httpd        httpd    app=web-deployment

$ kubectl get pods -l app=web-deployment
NAME                            READY   STATUS    RESTARTS   AGE
web-deployment-6d9bdd7c-xrkgh   1/1     Running   0          3m10s

$ kubectl get pods -l app=web-deployment -o wide
NAME                            READY   STATUS    RESTARTS   AGE     IP            NODE       NOMINATED NODE   READINESS GATES
web-deployment-6d9bdd7c-xrkgh   1/1     Running   0          3m25s   172.17.0.10   minikube   <none>

$ kubectl get services
NAME             TYPE       CLUSTER-IP       EXTERNAL-IP   PORT(S)        AGE
apache-pod       NodePort   10.108.204.156   <none>        80:30180/TCP   3h29m
web-deployment   NodePort   10.100.117.241   <none>        80:31849/TCP   2m13s

$ kubectl describe services web-deployment 

$ kubectl edit deployment web-deployment
deployment.apps/web-deployment edited

rmallaya@RMALLAYA-IN MINGW64 ~
$ kubectl get pods
NAME                            READY   STATUS              RESTARTS   AGE
apache-pod                      1/1     Running             1          23h
pod-from-cm                     1/1     Running             0          70m
pod-from-cm-volume              1/1     Running             0          61m
secret-envars-test-pod          1/1     Running             0          83m
test-pod                        1/1     Running             3          3h30m
two-containers                  1/2     NotReady            0          120m
web-deployment-6d9bdd7c-9t7fn   0/1     ContainerCreating   0          10s
web-deployment-6d9bdd7c-x5cld   0/1     ContainerCreating   0          10s
web-deployment-6d9bdd7c-xrkgh   1/1     Running             0          5m35s

$ kubectl describe deployment web-deployment
$ kubectl describe services web-deployment

Name:                     web-deployment
Namespace:                demo
Labels:                   app=web-deployment
Annotations:              <none>
Selector:                 app=web-deployment
Type:                     NodePort
IP:                       10.100.117.241
Port:                     <unset>  80/TCP
TargetPort:               80/TCP
NodePort:                 <unset>  31849/TCP
Endpoints:                172.17.0.10:80,172.17.0.11:80,172.17.0.12:80
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   <none>


Deployment Exposed as Service

$ kubectl get events
LAST SEEN   TYPE     REASON              OBJECT                               MESSAGE
56m         Normal   Pulling             pod/test-pod                         Pulling image "alpine"
56m         Normal   Pulled              pod/test-pod                         Successfully pulled image "alpine"
56m         Normal   Created             pod/test-pod                         Created container test-pod
56m         Normal   Started             pod/test-pod                         Started container test-pod
26m         Normal   Scheduled           pod/web-deployment-6d9bdd7c-9t7fn    Successfully assigned demo/web-deployment-6d9bdd7c-9t7fn to minikube
26m         Normal   Pulling             pod/web-deployment-6d9bdd7c-9t7fn    Pulling image "httpd"
26m         Normal   Pulled              pod/web-deployment-6d9bdd7c-9t7fn    Successfully pulled image "httpd"
26m         Normal   Created             pod/web-deployment-6d9bdd7c-9t7fn    Created container httpd
26m         Normal   Started             pod/web-deployment-6d9bdd7c-9t7fn    Started container httpd
26m         Normal   Scheduled           pod/web-deployment-6d9bdd7c-x5cld    Successfully assigned demo/web-deployment-6d9bdd7c-x5cld to minikube
26m         Normal   Pulling             pod/web-deployment-6d9bdd7c-x5cld    Pulling image "httpd"
26m         Normal   Pulled              pod/web-deployment-6d9bdd7c-x5cld    Successfully pulled image "httpd"
26m         Normal   Created             pod/web-deployment-6d9bdd7c-x5cld    Created container httpd
26m         Normal   Started             pod/web-deployment-6d9bdd7c-x5cld    Started container httpd
32m         Normal   Scheduled           pod/web-deployment-6d9bdd7c-xrkgh    Successfully assigned demo/web-deployment-6d9bdd7c-xrkgh to minikube
32m         Normal   Pulling             pod/web-deployment-6d9bdd7c-xrkgh    Pulling image "httpd"
32m         Normal   Pulled              pod/web-deployment-6d9bdd7c-xrkgh    Successfully pulled image "httpd"
32m         Normal   Created             pod/web-deployment-6d9bdd7c-xrkgh    Created container httpd
32m         Normal   Started             pod/web-deployment-6d9bdd7c-xrkgh    Started container httpd
32m         Normal   SuccessfulCreate    replicaset/web-deployment-6d9bdd7c   Created pod: web-deployment-6d9bdd7c-xrkgh
26m         Normal   SuccessfulCreate    replicaset/web-deployment-6d9bdd7c   Created pod: web-deployment-6d9bdd7c-9t7fn
26m         Normal   SuccessfulCreate    replicaset/web-deployment-6d9bdd7c   Created pod: web-deployment-6d9bdd7c-x5cld
32m         Normal   ScalingReplicaSet   deployment/web-deployment            Scaled up replica set web-deployment-6d9bdd7c to 1
26m         Normal   ScalingReplicaSet   deployment/web-deployment            Scaled up replica set web-deployment-6d9bdd7c to 3


 minikube addons list
|-----------------------------|----------|--------------|
|         ADDON NAME          | PROFILE  |    STATUS    |
|-----------------------------|----------|--------------|
| ambassador                  | minikube | disabled     |
| dashboard                   | minikube | disabled     |
| default-storageclass        | minikube | enabled ✅   |
| efk                         | minikube | disabled     |
| freshpod                    | minikube | disabled     |
| gvisor                      | minikube | disabled     |
| helm-tiller                 | minikube | disabled     |
| ingress                     | minikube | disabled     |
| ingress-dns                 | minikube | disabled     |
| istio                       | minikube | disabled     |
| istio-provisioner           | minikube | disabled     |
| logviewer                   | minikube | disabled     |
| metallb                     | minikube | disabled     |
| metrics-server              | minikube | disabled     |
| nvidia-driver-installer     | minikube | disabled     |
| nvidia-gpu-device-plugin    | minikube | disabled     |
| olm                         | minikube | disabled     |
| registry                    | minikube | disabled     |
| registry-aliases            | minikube | disabled     |
| registry-creds              | minikube | disabled     |
| storage-provisioner         | minikube | enabled ✅   |
| storage-provisioner-gluster | minikube | disabled     |
|-----------------------------|----------|--------------|

λ minikube addons enable dashboard
* The 'dashboard' addon is enabled

λ kubectl get ns
NAME                   STATUS   AGE
default                Active   27h
demo                   Active   24h
kube-node-lease        Active   27h
kube-public            Active   27h
kube-system            Active   27h
kubernetes-dashboard   Active   42s

> kubectl get pods -n kubernetes-dashboard
NAME                                         READY   STATUS    RESTARTS   AGE
dashboard-metrics-scraper-84bfdf55ff-qvld7   1/1     Running   0          63s
kubernetes-dashboard-696dbcc666-cc4fp        1/1     Running   0          63s

λ minikube dashboard
* Verifying dashboard health ...
* Launching proxy ...
* Verifying proxy health ...
* Opening http://127.0.0.1:54359/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/ in your default browser...

$ kubectl describe node minikube


λ minikube addons disable dashboard
* "The 'dashboard' addon is disabled

minikube stop

* Stopping "minikube" in virtualbox ...
* Node "minikube" stopped.

 